#!/bin/bash
#/**
#         configureOsCustom
#@brief   Plantilla para scirpt de configuracion personalizada de sistema operativo restaurado.
#@param   $1 nº de disco 
#@param   $2 nº de partición 
#@param   $3 Repositorio: CACHE, REPO o dirección IP (opcional)
#@param   $4 Nombre canónico de la imagen sin extensión (opcional)
#@warning Renombrar este fichero como "configureOsCustom" para sustituir al script estándar "configureOs".
#@note    Los parámetros disco y partición son obligatorios y opcionalmente puede recibir también el repositorio y la imagen usada para en el despliegue.
#**/


# Control de parámetros.
[ $# -eq 2 -o $# -eq 4 ] || ogRaiseError $OG_ERR_FORMAT "$MSG_FORMAT: configureOsCustom int_ndisc int_npart [str_repo str_imgname]" || exit $?

# Parámetros obligatorios.
DISK="$1"		# Nº de disco.
PART="$2"		# Nº de partición.
# Parámetros opcionales. 
REPO="${3^^}"		# Repositorio (en mayúsculas).
IMGNAME="$4"		# Nombre canónico de imagen (sin extensión).


# Paso 0: Añadir código para realizar control de errores de los parámetros de entrada (recomendado).

# Paso 1: Adaptar el código de ejemplo para postconfiguración personalizada.
# Nota: incluye llamada al script "configureOs" para realizar previamente una configuración estándar.

# Configurarción típica.
configureOs "$1" "$2"




# Postconfiguración personalizada para cada tipo de sistema operativo.
OSTYPE="$(ogGetOsType $1 $2)"
case "$OSTYPE" in 
    Windows)    # Postconfiguración de Windows.
        # Descomentar la siguiente línea para cambiar usuario de inicio.
        #ogSetWinlogonUser $1 $2 " "
        # OPCIONAL: desactivar el chkdisk de windows tras la restauracion. Requiere configuracion previa en el engine.cfg
        #ogLoadHiveWindows $1 $2; ogSetWindowsChkdisk $OGWINCHKDISK; ogUpdateHiveWindows
        ;;
    Linux)      # Postconfiguración de GNU/Linux.
        ##OPCIONAL: Configurar el FSTAB. En esta versión solo autoconfigura la partición SWAP
        #ogConfigureFstab $1 $2
        ##OPCIONAL Limpiar dispositivos reconocidos previamente
        #ogCleanLinuxDevices $1 $2
        ## Instala (no configura) el codigo de arranque del Grub en la partición (no lo configura, se mantiene el original de la imagen)
        #ogGrubInstallPartition $1 $2
        ## OPCIONAL: instala y configura el codigo de arranque del Grub en el MBR (no lo configura, se mantiene el original de la imagen)
        #ogGrubInstallMbr $1 $2
        ## OPCIONAL:  Instala y configura el Grub en el MBR y lo autoconfigura, entradas para los sitemas operativos, ademas al linux restaurado le añade los parmetros indicados.
        #ogGrubInstallMbr $1 $2 TRUE "irqpoll pci=noacpi noresume quiet splash"         
        ;;
    MacOS)          # Postconfiguración de Mac OS X.
        # Programa de inicio que será ejecutado en el arranque de Mac OS X.
        # NOTA: no modificar la línea siguiente.
        cat << EOT | sed -n -e '/rm -f /r /dev/stdin' -e 1x -e '2,${x;p}' -e '${x;p}' $MNTDIR/var/root/postconfd.sh

	### NOTA: descomentar las opciones deseadas.
	# Activar Journaling en HFS+ (no usar si el cliente continua en OpenGnsys).
	#diskutil enableJournal disk$[$1-1]s$2
	# Pedir usuario y clave en pantalla de conexión.
	#defaults write /Library/Preferences/com.apple.loginwindow SHOWFULLNAME -bool yes
	# No mostrar botón de cambio rápido de usuario.
	#defaults write /Library/Preferences/.GlobalPreferences MultipleSessionEnabled -bool NO
	# Bloquear escritorio, fondo, dock, etc del usuario "usuario".
	#chflags uchange /Users/usuario/Library/Preferences/com.apple.desktop.plist
	#chflags uchange /Users/usuario/Library/Preferences/com.apple.dock.plist
	#chflags uchange /Users/usuario/Desktop
	# Añadir usuario "usuario" a la lista de desarrolladores de Xcode.
	#DevToolsSecurity --enable
	#dscl . -append /Groups/_developer GroupMembership usuario
	# Bajar volumen (valor entre 0 y 7).
	#osascript -e 'set volume 1'

EOT
        # NOTA: no modificar la línea anterior.
        ;;
esac

# Paso 2: Incluir código genérico de postconfiguración.

#PERSONALIZACION EVLT mpliacion a la configuración tipica

echo "00 INICIO generico tras clonar: ajustar tipo Particion" >> $POSTCONFLOG
#"Comprobar coherencia entre  tipo sistema de archivos ($TYPEFS) y tipo de particion ($TYPEPART)"
TYPEPART=$(ogGetPartitionType $1 $2)
TYPEFS=$(ogGetFsType $1 $2)
case "$TYPEFS" in
	NTFS)
		NEWTYPEPART="NTFS"
	;;
	EXT*)
		NEWTYPEPART="LINUX"
	;;
	*)
		NEWTYPEPART=$TYPEFS
	;;
esac
[ "$TYPEPART" != "$NEWTYPEPART" ] && ogSetPartitionType $1 $2 $NEWTYPEPART

echo "01 INICIO generico tras clonar: dejando marcas del proceso de creacion en la particion solo si es llamada desde el deployImage con 4 parametros"
[ $# -eq 4 ] && ogSetRestoreInfo "$1" "$2" "$4"


OSTYPE="$(ogGetOsType $1 $2)"
DEPENDENCIA=$(ogGetDependenciaTipo)
echo "02 INICIO configuracion por Dependencia EVLT $DEPENDENCIA " >> $POSTCONFLOG
ogEcho log session "  [-] Detectar subdependencia Complejo Tecnologico de EVLT: nombre equipo = $HOSTNAME"
SUBDEPENDENCIA=$(ogGetDependenciaNumero)


echo "01 INICIO generico tras clonar: Configuracion gestor de arranque." >> $POSTCONFLOG
case "$OSTYPE" in 
        Linux*)   echo "Configuracion Gestor Arranque de Linux"
            # el grubMBR solo se instala por el installMenuSistema
            #ogGrubInstallMbr $1 $2 TRUE "irqpoll pci=noacpi noresume quiet splash" 
            echo "Instalar grub2 en Partition y configurarlo sin opciones de menu y parámetros de kernel nomodeset irqpoll pci=noacpi"
            ogGrubInstallPartition $1 $2 TRUE "irqpoll pci=noacpi noresume quiet splash"
        ;;
        *Windows*)   echo "Configuracion Gestor Arranque de Windows"
                #Usar BCD de plantilla
                test `ogGetHostname | awk -F- '{ print $1 }'` = "ING"  && ogWindowsTemplateBCD $1 $2    
                # Configurar el boot sector de la partición Windows.
                ogFixBootSector $1 $2
                # Configurar el gestor de arranque de Windows XP/Vista/7.
                ogWindowsBootParameters $1 $2
                # Registrar en Windows que la partición indicada es su nueva unidad C:\
                ogWindowsRegisterPartition $1 $2 C $1 $2
                #Orden de busqueda de sufijos dns
                ogSetWindowsDNSsearchList $1 $2 "sci.uma.es,uma.es,evlt.uma.es,aulas.uma.es"
            	case "$OSTYPE" in 
                	*Windows\ XP) echo "Configuracion de Arranque especifico para windows XP"
                	;;
                	*Windows\ 7*)  echo "Configuracion de Arranque especifico para windows W7"
                	    buildToOrder $1 $2
                	;;
                	*Windows\ 10*) echo "Configuracion de Arranque especifico para windows 10"
                	;;
            esac
        ;;
esac
echo "01 FIN generico tras clonar: Configuracion gestor de arranque."





echo "FASE2: Personalización del sistema operativo EVLT por dependencia" >> $POSTCONFLOG
# "lt" "ad""opac""etu" "por""con" "srv" "warning tipo dependencia no coincide $TYPEDEPENDENCIA"
case "$DEPENDENCIA" in
    lt|ad|opac|etu|por|con)
        case "$OSTYPE" in 
            Linux*)   echo "PostConfiguracion de Linux segun Dependencia $DEPENDENCIA"
                echo "Asignar nombre"
                ogSetLinuxName $1 $2
                echo "Configurar fichero fstab segun Dependencia $DEPENDENCIA"
                ogConfigureFstab $1 $2 
                echo "Limpiar dispositivos reconocidos previamente"
                ogCleanLinuxDevices $1 $2 
                echo "proxy"
                ogSetProxyLinuxConsole $1 $2
                # https://proyectos.evlt.uma.es/browse/IBWL-309
                #ogSetLnxInterface $1 $2                
                # configuracion especifica EVLT
                ogSetLnxEVLT $1 $2
            ;;
            *Windows*)   echo "PostConfiguracion de Windows segun Dependencia $DEPENDENCIA"
                # Cambiar nombre en sistemas Windows.
                HOST=$(ogGetHostname)
                HOST=${HOST:-"pc"}
                ogSetWindowsName $1 $2 "$HOST"   
                case "$OSTYPE" in 
                    *Windows\ 10*) echo "PostConfiguracion de Windows 10"
                    	#FirstRunOnceWindows10 $1 $2
                    	echo "fin postconfiguración de windows 10"
                    ;;
                    *Windows\ XP) echo "PostConfiguracion de XP"
                    ;;
                    *Windows\ 7*)  echo "Postconfiguracion de W7"
                        echo "Chkdisk segun engine.cfg"
                        ogLoadHiveWindows $1 $2; ogSetWindowsChkdisk $OGWINCHKDISK; ogUpdateHiveWindows
                        # Especifico de windows 7 profesional o Windows 
                        case "$TYPE" in 
                            *Windows\ 7\ Professional*)  echo "Postconfiguracion de W7 profesional "	
                            ;;
                            *Windows\ 7\ Enterprise*)  echo "Postconfiguracion de W7 Enterprise "
                                activeLicenseMicrosoftEnterprise $1 $2
                                ogSetWinResolution $1 $2 1280 1024
                                #ogSetWinMSWinActivate $1 $2
                                #ogSetWinMSOfficeActivate $1 $2
                                ogSetWinDriverConfig $1 $2
                                ogSetWinBCD $1 $2
                                #ogSetWinMenuConfig $1 $2
                                #ogSetWinWakeOnLan $1 $2
                                ogSetAguaDesktop $1 $2 administrator
                                ogSetAguaDesktop $1 $2 alumnos.V2
                                ogSetAguaVersion $1 $2 Prueba
                             ;;
                         esac # tipo de windows 7: profesional o enterprise
                        ;;
                esac # version de de windows: windows XP o Widnows 7
            ;;            
            *) echo " Depencia EVLT pero no coincide con sistema operativo"
            ;;
        esac  # tipo de sistema operativo
      ;; ## FIN PARA DEPENDENCIA LT reconocidas.
      *) 
        echo "dependencia EVLT no coincide $DEPENDENCIA" >> $POSTCONFLOG
      ;;
esac
echo "Fin FASE2: Personalización del sistema operativo EVLT por dependencia" >> $POSTCONFLOG




echo "FASE 3  Configuracion de servio AGUA, zabbix por Centro EVLT  " >> $POSTCONFLOG
# "lt" "ad""opac""etu" "por""con" "srv" "warning tipo dependencia no coincide $TYPEDEPENDENCIA"
case "$DEPENDENCIA" in
    lt|ad|opac|etu|por|con)    
        ogSetAguaCentroini $1 $2
        ogSetAguaProxyini $1 $2 
        ogSetAguaPCini $1 $2
        ogSetZabbixHostname $1 $2
    ;;  
    *)
    ;;
esac
echo "Fin FASE 3  Configuracion de servio AGUA, zabbix por Centro EVLT  " >> $POSTCONFLOG    


echo "FASE 4 personalización de centro.   " >> $POSTCONFLOG
# "lt" "ad""opac""etu" "por""con" "srv" "warning tipo dependencia no coincide $TYPEDEPENDENCIA"
case "$DEPENDENCIA" in
    lt|ad|opac|etu|por|con)    
        #Especifico CTE Aulas DOCENTES de Teleco (las AD de informatica igual que todas) 
    	if [ "$SUBDEPENDENCIA" == "t" ]; then
			echo "subdependencia t"
			ogSetRegistryValue /mnt/sda1 software '\Microsoft\Windows NT\CurrentVersion\Winlogon\AutoAdminLogon' '0'  2>/dev/null
			ogSetAguaDesactive $1 $2
        	ogSetAguaDesktop $1 $2 Usuario_UMA  
	    fi        
    ;;  
    *)
    ;;
esac    

cat $POSTCONFLOG
rm $POSTCONFLOG

